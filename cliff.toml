[changelog]
# Header for the changelog
header = """
# 📚 StudiBudi Product Updates

*Your AI-powered study companion keeps getting better! Here's what's new for students and educators.*

---

"""

# Body template for the changelog
body = """
{% if version -%}
## {{ version | trim_start_matches(pat="v") }} - {{ timestamp | date(format="%B %d, %Y") }}
{% else -%}
## Recent Updates
{% endif -%}

{% for group, commits in commits | group_by(attribute="group") -%}
{% if group == "🚀 New Features" -%}
### 🚀 New Features

{% for commit in commits -%}
- {{ commit.message | trim }}
{% endfor -%}

{% elif group == "✨ Improvements" -%}
### ✨ Improvements & Enhancements

{% for commit in commits -%}
- {{ commit.message | trim }}
{% endfor -%}

{% elif group == "🐛 Bug Fixes" -%}
### 🐛 Bug Fixes

{% for commit in commits -%}
- {{ commit.message | trim }}
{% endfor -%}

{% elif group == "⚡ Performance" -%}
### ⚡ Performance & Optimization

{% for commit in commits -%}
- {{ commit.message | trim }}
{% endfor -%}

{% elif group == "🔧 Technical" -%}
### 🔧 Technical Updates

{% for commit in commits -%}
- {{ commit.message | trim }}
{% endfor -%}

{% endif -%}
{% endfor -%}

---

### 🔗 Quick Links
- **📖 [User Guide](https://studibudi.com/docs)** - Learn how to use new features
- **💬 [Support](https://studibudi.com/support)** - Get help from our team  
- **📧 [Feedback](mailto:feedback@studibudi.com)** - Tell us what you think

---

"""

# Footer for the changelog
footer = """
*Updated automatically • Last refresh: {{ "now" | date(format="%B %d, %Y") }}*
"""

trim = true

# Clean up technical terms and make user-friendly
postprocessors = [
    # Remove conventional commit prefixes
    { pattern = '^feat(\([^)]*\))?\s*:\s*', replace = "" },
    { pattern = '^fix(\([^)]*\))?\s*:\s*', replace = "" },
    { pattern = '^perf(\([^)]*\))?\s*:\s*', replace = "" },
    { pattern = '^chore(\([^)]*\))?\s*:\s*', replace = "" },
    { pattern = '^docs(\([^)]*\))?\s*:\s*', replace = "" },
    { pattern = '^style(\([^)]*\))?\s*:\s*', replace = "" },
    { pattern = '^refactor(\([^)]*\))?\s*:\s*', replace = "" },
    { pattern = '^test(\([^)]*\))?\s*:\s*', replace = "" },
    { pattern = '^build(\([^)]*\))?\s*:\s*', replace = "" },
    { pattern = '^ci(\([^)]*\))?\s*:\s*', replace = "" },
    
    # Clean up technical terms
    { pattern = '(?i)\bcomponent\b', replace = "interface" },
    { pattern = '(?i)\bapi\b', replace = "service" },
    { pattern = '(?i)\bdatabase\b', replace = "data storage" },
    { pattern = '(?i)\bconfig\b', replace = "configuration" },
    { pattern = '(?i)\bimplement\b', replace = "add" },
    { pattern = '(?i)\bfunctionality\b', replace = "feature" },
    { pattern = '(?i)\bendpoint\b', replace = "service" },
    { pattern = '(?i)\bmiddleware\b', replace = "system" },
    { pattern = '(?i)\bschema\b', replace = "structure" },
    { pattern = '(?i)\bmigration\b', replace = "update" },
    { pattern = '(?i)\bwebsocket\b', replace = "real-time connection" },
    { pattern = '(?i)\bauth\b', replace = "authentication" },
    { pattern = '(?i)\bui\b', replace = "interface" },
    { pattern = '(?i)\bux\b', replace = "user experience" },
    
    # Remove file extensions
    { pattern = '\.tsx?', replace = "" },
    { pattern = '\.jsx?', replace = "" },
    { pattern = '\.py', replace = "" },
    { pattern = '\.md', replace = "" },
    { pattern = '\.json', replace = "" },
    { pattern = '\.ya?ml', replace = "" },
    { pattern = '\.css', replace = "" },
    { pattern = '\.scss', replace = "" },
    
    # Remove common file paths
    { pattern = 'src/', replace = "" },
    { pattern = 'components/', replace = "" },
    { pattern = 'pages/', replace = "" },
    { pattern = 'hooks/', replace = "" },
    { pattern = 'lib/', replace = "" },
    { pattern = 'utils/', replace = "" },
    { pattern = 'backend/', replace = "" },
    { pattern = 'frontend/', replace = "" },
    
    # Remove PR numbers and technical references
    { pattern = '\s*\(#\d+\)', replace = "" },
    { pattern = '\s*closes?\s+#\d+', replace = "" },
    { pattern = '\s*fixes?\s+#\d+', replace = "" },
    { pattern = '\s*refs?\s+#\d+', replace = "" },
    
    # Capitalize first letter
    { pattern = '^([a-z])', replace = "${1}" },
]

[git]
conventional_commits = true
filter_unconventional = false  # Include non-conventional commits
split_commits = false
protect_breaking_commits = false
filter_commits = false  # Don't filter commits aggressively
tag_pattern = "v[0-9].*"
skip_tags = "v0.0.1"
ignore_tags = ""
topo_order = false
sort_commits = "newest"
limit_commits = 25  # Show more commits

# More inclusive commit filtering - catch most user-facing work
commit_parsers = [
    # === NEW FEATURES - Much broader patterns ===
    { message = "^feat", group = "🚀 New Features" },
    { message = "^add", group = "🚀 New Features" },
    { message = "^create", group = "🚀 New Features" },
    { message = "^implement", group = "🚀 New Features" },
    { message = "^introduce", group = "🚀 New Features" },
    { message = ".*[Nn]ew.*", group = "🚀 New Features" },
    { message = ".*[Aa]dd.*", group = "🚀 New Features" },
    
    # === IMPROVEMENTS - UI/UX and enhancements ===
    { message = "^improve", group = "✨ Improvements" },
    { message = "^enhance", group = "✨ Improvements" },
    { message = "^update", group = "✨ Improvements" },
    { message = "^upgrade", group = "✨ Improvements" },
    { message = "^optimize", group = "✨ Improvements" },
    { message = "^refactor", group = "✨ Improvements" },
    { message = ".*[Ii]mprove.*", group = "✨ Improvements" },
    { message = ".*[Ee]nhance.*", group = "✨ Improvements" },
    { message = ".*[Bb]etter.*", group = "✨ Improvements" },
    { message = ".*[Uu]pdate.*", group = "✨ Improvements" },
    
    # === BUG FIXES - Include more fixes ===
    { message = "^fix", group = "🐛 Bug Fixes" },
    { message = "^resolve", group = "🐛 Bug Fixes" },
    { message = "^correct", group = "🐛 Bug Fixes" },
    { message = ".*[Ff]ix.*", group = "🐛 Bug Fixes" },
    { message = ".*[Rr]esolve.*", group = "🐛 Bug Fixes" },
    { message = ".*[Cc]orrect.*", group = "🐛 Bug Fixes" },
    { message = ".*[Bb]ugfix.*", group = "🐛 Bug Fixes" },
    
    # === PERFORMANCE - Speed and optimization ===
    { message = "^perf", group = "⚡ Performance" },
    { message = ".*[Pp]erformance.*", group = "⚡ Performance" },
    { message = ".*[Ff]aster.*", group = "⚡ Performance" },
    { message = ".*[Ss]peed.*", group = "⚡ Performance" },
    { message = ".*[Oo]ptimiz.*", group = "⚡ Performance" },
    { message = ".*[Qq]uicker.*", group = "⚡ Performance" },
    
    # === TECHNICAL - Keep some technical stuff but clean ===
    { message = "^chore", group = "🔧 Technical" },
    { message = "^build", group = "🔧 Technical" },
    { message = "^docs", group = "🔧 Technical" },
    { message = "^style", group = "🔧 Technical" },
    { message = "^test", group = "🔧 Technical" },
    { message = ".*[Tt]est.*", group = "🔧 Technical" },
    { message = ".*[Dd]ocs.*", group = "🔧 Technical" },
    { message = ".*[Cc]onfig.*", group = "🔧 Technical" },
    
    # === SKIP ONLY THE MOST TECHNICAL STUFF ===
    { message = "^ci:", skip = true },
    { message = ".*[Mm]erge.*branch.*", skip = true },
    { message = ".*[Bb]ump.*version.*", skip = true },
    { message = ".*[Aa]uto.*generated.*", skip = true },
    { message = ".*[Dd]ependency.*update.*", skip = true },
    { message = ".*[Nn]ode_modules.*", skip = true },
    { message = ".*[Pp]ackage-lock.*", skip = true },
    { message = ".*[Yy]arn.lock.*", skip = true },
    { message = ".*[Bb]un.lockb.*", skip = true },
]

commit_preprocessors = [
    # Clean up commit messages before processing
    { pattern = '^\[.*?\]\s*', replace = "" },                    # Remove [tags]
    { pattern = '\s*\(#\d+\)$', replace = "" },                   # Remove PR numbers at end
    { pattern = '\s*closes?\s+#\d+', replace = "" },              # Remove "closes #123"
    { pattern = '\s*fixes?\s+#\d+', replace = "" },               # Remove "fixes #123"
    { pattern = '\s*refs?\s+#\d+', replace = "" },                # Remove "refs #123"
    { pattern = '^\s+|\s+$', replace = "" },                      # Trim whitespace
] 