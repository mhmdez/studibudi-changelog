[changelog]
# Header for the changelog
header = """
# 📚 StudiBudi Product Updates

*Your AI-powered study companion keeps getting better! Here's what's new for students and educators.*

---

"""

# Body template for the changelog
body = """
{% if version -%}
## {{ version | trim_start_matches(pat="v") }} - {{ timestamp | date(format="%B %d, %Y") }}
{% else -%}
## Latest Updates
{% endif -%}

{% for group, commits in commits | group_by(attribute="group") -%}
{% if group == "🚀 Major Features" -%}
### 🚀 Major New Features

{% for commit in commits -%}
- {{ commit.message | upper | replace(from="FEAT: ", to="") | replace(from="FEAT(", to="") | replace(from="): ", to=": ") | replace(from="VOICE", to="🎙️ Voice Chat") | replace(from="AUDIO", to="🔊 Audio") | replace(from="CHAT", to="💬 Chat") | replace(from="AI", to="🤖 AI") | replace(from="TUTOR", to="👨‍🏫 Tutor") | replace(from="LEARNING", to="📚 Learning") | replace(from="STUDY", to="📖 Study") | replace(from="DASHBOARD", to="📊 Dashboard") | replace(from="PROGRESS", to="📈 Progress") | replace(from="QUIZ", to="🧠 Quiz") | replace(from="MOBILE", to="📱 Mobile") | replace(from="PERSONALI", to="🎯 Personali") | title }}
{% endfor -%}

{% elif group == "✨ Improvements" -%}
### ✨ Notable Improvements

{% for commit in commits -%}
- {{ commit.message | upper | replace(from="FEAT: ", to="") | replace(from="FIX: ", to="") | replace(from="UI", to="🎨 Interface") | replace(from="UX", to="✨ Experience") | replace(from="DESIGN", to="🎨 Design") | replace(from="NAVIGATION", to="🧭 Navigation") | replace(from="RESPONSIVE", to="📱 Mobile-Friendly") | title }}
{% endfor -%}

{% elif group == "⚡ Performance" -%}
### ⚡ Performance Enhancements

{% for commit in commits -%}
- {{ commit.message | upper | replace(from="PERF: ", to="") | replace(from="FIX: ", to="") | replace(from="FASTER", to="⚡ Faster") | replace(from="SPEED", to="🚀 Speed") | replace(from="OPTIMIZ", to="⚡ Optimized") | replace(from="PERFORMANCE", to="⚡ Performance") | title }}
{% endfor -%}

{% endif -%}
{% endfor -%}

---

### 🔗 Quick Links
- **📖 [User Guide](https://studibudi.com/docs)** - Learn how to use new features
- **💬 [Support](https://studibudi.com/support)** - Get help from our team  
- **📧 [Feedback](mailto:feedback@studibudi.com)** - Tell us what you think

---

"""

# Footer for the changelog
footer = """
*Updated automatically • Last refresh: {{ "now" | date(format="%B %d, %Y") }}*
"""

trim = true
postprocessors = [
    # Clean up technical terms
    { pattern = '(?i)feat:', replace = "" },
    { pattern = '(?i)fix:', replace = "" },
    { pattern = '(?i)perf:', replace = "" },
    { pattern = '(?i)component', replace = "feature" },
    { pattern = '(?i)api', replace = "service" },
    { pattern = '(?i)database', replace = "data" },
    { pattern = '(?i)config', replace = "settings" },
    { pattern = '(?i)implement', replace = "add" },
    { pattern = '(?i)functionality', replace = "feature" },
    { pattern = '(?i)\.tsx?', replace = "" },
    { pattern = '(?i)\.jsx?', replace = "" },
    { pattern = '(?i)\.py', replace = "" },
    { pattern = '(?i)\.ts', replace = "" },
    { pattern = '(?i)\.js', replace = "" },
    # Remove file paths and technical references
    { pattern = 'src/.*?/', replace = "" },
    { pattern = 'components/.*?/', replace = "" },
    { pattern = 'pages/.*?/', replace = "" },
    { pattern = 'hooks/.*?/', replace = "" },
    { pattern = 'lib/.*?/', replace = "" },
    { pattern = 'utils/.*?/', replace = "" },
]

[git]
conventional_commits = true
filter_unconventional = true
split_commits = false
protect_breaking_commits = false
filter_commits = true
tag_pattern = "v[0-9].*"
skip_tags = "v0.0.1"
ignore_tags = ""
topo_order = false
sort_commits = "newest"
limit_commits = 10  # Only show 10 most important items

# Ultra-selective commit filtering - only major user-facing features
commit_parsers = [
    # === MAJOR FEATURES - Only the big stuff users care about ===
    { message = "^feat.*([Vv]oice|[Aa]udio).*([Cc]hat|[Tt]alk|[Ss]peak)", group = "🚀 Major Features" },
    { message = "^feat.*[Aa]I.*([Tt]utor|[Cc]hat|[Aa]ssistant)", group = "🚀 Major Features" },
    { message = "^feat.*([Pp]ersonali|[Cc]ustom|[Aa]daptive).*[Ll]earning", group = "🚀 Major Features" },
    { message = "^feat.*([Dd]ashboard|[Pp]rogress|[Aa]nalytics)", group = "🚀 Major Features" },
    { message = "^feat.*([Qq]uiz|[Tt]est|[Aa]ssessment)", group = "🚀 Major Features" },
    { message = "^feat.*([Nn]ote|[Aa]nnotation|[Hh]ighlight)", group = "🚀 Major Features" },
    { message = "^feat.*([Ss]tudy|[Ll]earning).*([Ss]ession|[Mm]ode)", group = "🚀 Major Features" },
    { message = "^feat.*[Mm]obile.*([Aa]pp|[Ss]upport|[Oo]ptimi)", group = "🚀 Major Features" },
    
    # === IMPROVEMENTS - Only major UI/UX changes ===
    { message = "^feat.*([Uu]I|[Ii]nterface).*([Rr]edesign|[Ii]mprove)", group = "✨ Improvements" },
    { message = "^feat.*([Nn]avigation|[Mm]enu).*([Ii]mprove|[Ee]nhance)", group = "✨ Improvements" },
    { message = "^feat.*([Rr]esponsive|[Mm]obile).*([Dd]esign|[Ll]ayout)", group = "✨ Improvements" },
    { message = "^feat.*([Dd]ark|[Ll]ight).*[Mm]ode", group = "✨ Improvements" },
    { message = "^feat.*([Aa]ccessibility|[Aa]11y)", group = "✨ Improvements" },
    
    # === PERFORMANCE - Only major speed improvements ===
    { message = "^perf.*([Ff]aster|[Ss]peed|[Qq]uick)", group = "⚡ Performance" },
    { message = "^perf.*([Oo]ptimi|[Ii]mprove).*([Ll]oad|[Rr]ender)", group = "⚡ Performance" },
    { message = "^fix.*([Ss]low|[Ll]ag|[Pp]erformance)", group = "⚡ Performance" },
    
    # === SKIP EVERYTHING ELSE ===
    { message = "^feat.*([Tt]est|[Dd]ev|[Aa]dmin|[Cc]onfig|[Ss]etup)", skip = true },
    { message = "^feat.*([Ll]og|[Dd]ebug|[Aa]pi|[Dd]atabase|[Bb]ackend)", skip = true },
    { message = "^feat.*([Cc]omponent|[Uu]til|[Hh]ook|[Hh]elper)", skip = true },
    { message = "^feat.*([Bb]uild|[Dd]eploy|[Cc]i|[Cc]d)", skip = true },
    { message = "^fix.*", skip = true },           # Skip regular bug fixes
    { message = "^chore.*", skip = true },         # Skip maintenance
    { message = "^ci.*", skip = true },            # Skip CI/CD
    { message = "^build.*", skip = true },         # Skip build
    { message = "^docs.*", skip = true },          # Skip documentation
    { message = "^style.*", skip = true },         # Skip style changes
    { message = "^refactor.*", skip = true },      # Skip refactoring
    { message = "^test.*", skip = true },          # Skip testing
    { message = ".*[Mm]erge.*", skip = true },     # Skip merge commits
    { message = ".*[Bb]ump.*", skip = true },      # Skip version bumps
    { message = ".*[Rr]elease.*", skip = true },   # Skip release commits
    { message = ".*[Aa]uto.*", skip = true },      # Skip automated commits
    { message = ".*[Dd]ependenc.*", skip = true }, # Skip dependency updates
]

commit_preprocessors = [
    # Clean up commit messages before processing
    { pattern = '^\[.*?\]\s*', replace = "" },                    # Remove [tags]
    { pattern = '^(feat|fix|perf|chore|ci|build|docs|style|refactor|test)(\(.*?\))?\s*:\s*', replace = "" },  # Remove conventional prefixes
    { pattern = '\s*\(#\d+\)$', replace = "" },                   # Remove PR numbers
    { pattern = '\s*closes?\s+#\d+', replace = "" },              # Remove "closes #123"
    { pattern = '\s*fixes?\s+#\d+', replace = "" },               # Remove "fixes #123"
] 