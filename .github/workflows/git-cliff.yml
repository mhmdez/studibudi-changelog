name: combined-changelog
on:
  workflow_dispatch:        # manual run
  schedule:
    - cron: "0 */12 * * *"  # twice a day UTC

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # Check out this repo first to get the workspace
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Check out both source repos (full history)
      - uses: actions/checkout@v4
        with:
          repository: mhmdez/studibudi
          path: studibudi
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - uses: actions/checkout@v4
        with:
          repository: mhmdez/studi-budi-ai-tutor
          path: studi-budi-ai-tutor
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      # Set up Python for the cleanup script
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Generate JSON changelog with git-cliff using official action
      - name: Generate JSON changelog with git-cliff
        uses: orhun/git-cliff-action@v2
        with:
          config: cliff.toml
          args: >
            --repository studibudi
            --repository studi-budi-ai-tutor
            --output CHANGELOG_RAW.json
            --format json
            --verbose
        env:
          OUTPUT: CHANGELOG_RAW.json

      # Verify and copy the raw JSON for processing
      - name: Copy raw JSON for processing
        run: |
          echo "Checking if CHANGELOG_RAW.json exists..."
          if [ -f "CHANGELOG_RAW.json" ]; then
            echo "‚úÖ JSON file found!"
            ls -la CHANGELOG_RAW.json
            echo "First few lines:"
            head -10 CHANGELOG_RAW.json
            cp CHANGELOG_RAW.json "CHANGELOG copy.json"
            echo "‚úÖ Copied JSON file for processing"
          else
            echo "‚ùå JSON file not found, creating fallback..."
            echo '[{"version": "unreleased", "commits": []}]' > "CHANGELOG copy.json"
          fi

      # Run Python cleanup script to generate clean markdown
      - name: Generate clean changelog
        run: |
          echo "Running Python cleanup script..."
          python3 cleanup_changelog.py
          echo "Generated CHANGELOG_CLEAN.md:"
          ls -la CHANGELOG_CLEAN.md

      # Use the cleaned changelog as the final output
      - name: Use cleaned changelog
        run: |
          mv CHANGELOG_CLEAN.md CHANGELOG.md
          echo "Final CHANGELOG.md:"
          head -20 CHANGELOG.md

      # Commit only if CHANGELOG.md changed
      - name: Commit changes
        run: |
          git config user.name  "StudiBudi Bot"
          git config user.email "bot@studibudi.com"
          
          if ! git diff --quiet CHANGELOG.md; then
            git add CHANGELOG.md
            git commit -m "üìù Update changelog with latest changes"
            git push
          else
            echo "No changes to CHANGELOG.md"
          fi
